#ifndef I2CUTIL_H
#define I2CUTIL_H

//---------------------------------------------------------------------
// I2C
//---------------------------------------------------------------------
#include<i2c.h>

 

void i2c(void )

{

  unsigned int config2, config1;

  unsigned char *wrptr;

  unsigned char tx_data[] = {'M','I','C','R','O',’C’,'H','I','P','\0'};

  wrptr = tx_data;

  /* Baud rate is set for 100 Khz */

  config2 = 0x1D;

  /* Configure I2C for 7 bit address mode */

  config1 = (I2C_ON & I2C_IDLE_CON & I2C_CLK_HLD &

             I2C_IPMI_DIS & I2C_7BIT_ADD &

             I2C_SLW_DIS & I2C_SM_DIS &

             I2C_GCALL_DIS & I2C_STR_DIS &

             I2C_NACK & I2C_ACK_DIS & I2C_RCV_DIS &

             I2C_STOP_DIS & I2C_RESTART_DIS &

             I2C_START_DIS);

  OpenI2C(config1,config2);

  IdleI2C();

  StartI2C();

  /* Wait till Start sequence is completed */

  while(I2CCONbits.SEN);

  /* Clear interrupt flag */

  IFS0bits.MI2CIF = 0;

  /* Write Slave address and set master for transmission */

  MasterWriteI2C(0x1D);

  /* Wait till address is transmitted */

  while(I2CSTATbits.TBF);  // 8 clock cycles

  while(!IFS0bits.MI2CIF); // Wait for 9th clock cycle

  IFS0bits.MI2CIF = 0;     // Clear interrupt flag

  while(I2CSTATbits.ACKSTAT);

  /* Transmit string of data */

  MasterputsI2C(0x00);//Id 

  StopI2C();

  /* Wait till stop sequence is completed */

  while(I2CCONbits.PEN);

  CloseI2C();

}